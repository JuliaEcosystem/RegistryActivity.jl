var documenterSearchIndex = {"docs":
[{"location":"#RegistryActivity.jl-Documentation","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.jl Documentation","text":"","category":"section"},{"location":"","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.jl Documentation","text":"This is the reference documentation of RegistryActivity.jl.","category":"page"},{"location":"#Index","page":"RegistryActivity.jl Documentation","title":"Index","text":"","category":"section"},{"location":"","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.jl Documentation","text":"","category":"page"},{"location":"#Functions","page":"RegistryActivity.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.jl Documentation","text":"Modules = [RegistryActivity]\nOrder = [:function]","category":"page"},{"location":"#RegistryActivity._non_yanked_versions-Tuple{Any}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity._non_yanked_versions","text":"_non_yanked_versions(file)\n\nGet the list of non-yanked versions of the package for which file is the path to its Versions.toml.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.checkout_date-Tuple{Any, Dates.Date}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.checkout_date","text":"checkout_date(path, date::Date; branch=\"master\")\n\nCheck out branch of Git repository at path on date.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.clone_registry-Tuple{}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.clone_registry","text":"clone_registry(; origin=\"https://github.com/JuliaRegistries/General.git\", dest=mktempdir())\n\nDo a git clone of origin to dest.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.count_packages","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.count_packages","text":"count_packages(path, packages=TOML.parsefile(joinpath(path, \"Registry.toml\"))[\"packages\"])\n\nCount the number of packages in the registry at path, using the list of packages.\n\n\n\n\n\n","category":"function"},{"location":"#RegistryActivity.count_versions","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.count_versions","text":"count_versions(path, packages=TOML.parsefile(joinpath(path, \"Registry.toml\"))[\"packages\"])\n\nCount the number of versions in the registry at path, using the list of packages.\n\n\n\n\n\n","category":"function"},{"location":"#RegistryActivity.extrema_dates-Tuple{Any}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.extrema_dates","text":"extrema_dates(path)\n\nGet the first and last date of commits in the git repository at path.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.general_registry-Tuple{}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.general_registry","text":"general_registry() -> String\n\nGuess the path of the General registry.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.get_date-Tuple{Any}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.get_date","text":"get_date(c)\n\nGet the UTC date of the Git commit c.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.months_list-Tuple{Any, Any, Any}","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.months_list","text":"months_list(path, start_month, end_month)\n\nGet the range of months when there have been commit to the Git repository at path, between start_month and end_month.\n\n\n\n\n\n","category":"method"},{"location":"#RegistryActivity.registry_activity","page":"RegistryActivity.jl Documentation","title":"RegistryActivity.registry_activity","text":"registry_activity(path=clone_registry();\n                  branch=\"master\",\n                  start_month=Date(2018, 2),\n                  end_month=Date(year(now(UTC)), month(now(UTC))),\n                  filter=p->!(occursin(r\"_jll$\", last(p)[\"name\"]) || last(p)[\"name\"]==\"julia\"),\n                  )\n\nGet the 3-tuple months, packages, versions of vector of months, number of packages, number of versions for the registry at path (by default a Git clone of the General registry with clone_registry()), checking out the Git branch.  The search is restricted between start_month and end_month.  You can filter the packages matching the filter condition, which is a function taking as argument an item in the dictionary of a parsed Registry.toml, that is a pair whose key is the UUID of the package and the value is a dictionary with information about the package, usually including the name and the path to the directory where the package is recorded.\n\n\n\n\n\n","category":"function"}]
}
